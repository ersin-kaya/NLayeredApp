// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NLayeredApp.DataAccess;

#nullable disable

namespace NLayeredApp.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250526212835_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NLayeredApp.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTimeOffset?>("LastModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "system",
                            Description = "Electronic products category",
                            IsActive = true,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "system",
                            Description = "Clothing products category",
                            IsActive = true,
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "system",
                            Description = "Home and living products",
                            IsActive = true,
                            Name = "Home & Living"
                        });
                });

            modelBuilder.Entity("NLayeredApp.Core.Entities.CategoryFeatureType", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("FeatureTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsRequired")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Label")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId", "FeatureTypeId");

                    b.HasIndex("FeatureTypeId");

                    b.ToTable("CategoryFeatureTypes");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            FeatureTypeId = 1,
                            IsRequired = false,
                            Label = "Color"
                        },
                        new
                        {
                            CategoryId = 1,
                            FeatureTypeId = 4,
                            IsRequired = false,
                            Label = "Storage Capacity"
                        },
                        new
                        {
                            CategoryId = 1,
                            FeatureTypeId = 5,
                            IsRequired = false,
                            Label = "RAM"
                        },
                        new
                        {
                            CategoryId = 1,
                            FeatureTypeId = 6,
                            IsRequired = false,
                            Label = "Processor"
                        },
                        new
                        {
                            CategoryId = 1,
                            FeatureTypeId = 7,
                            IsRequired = false,
                            Label = "Screen Size"
                        },
                        new
                        {
                            CategoryId = 2,
                            FeatureTypeId = 1,
                            IsRequired = false,
                            Label = "Color"
                        },
                        new
                        {
                            CategoryId = 2,
                            FeatureTypeId = 2,
                            IsRequired = false,
                            Label = "Size"
                        },
                        new
                        {
                            CategoryId = 2,
                            FeatureTypeId = 3,
                            IsRequired = false,
                            Label = "Material"
                        },
                        new
                        {
                            CategoryId = 3,
                            FeatureTypeId = 1,
                            IsRequired = false,
                            Label = "Color"
                        },
                        new
                        {
                            CategoryId = 3,
                            FeatureTypeId = 3,
                            IsRequired = false,
                            Label = "Material"
                        });
                });

            modelBuilder.Entity("NLayeredApp.Core.Entities.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("FeatureTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId", "FeatureTypeId");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            FeatureTypeId = 1,
                            Value = "Black"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            FeatureTypeId = 1,
                            Value = "White"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            FeatureTypeId = 1,
                            Value = "Silver"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            FeatureTypeId = 4,
                            Value = "64 GB"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            FeatureTypeId = 4,
                            Value = "128 GB"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            FeatureTypeId = 4,
                            Value = "256 GB"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            FeatureTypeId = 4,
                            Value = "512 GB"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            FeatureTypeId = 5,
                            Value = "4 GB"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            FeatureTypeId = 5,
                            Value = "8 GB"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 1,
                            FeatureTypeId = 5,
                            Value = "16 GB"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 1,
                            FeatureTypeId = 5,
                            Value = "32 GB"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 1,
                            FeatureTypeId = 6,
                            Value = "Amd Ryzen 5 7600X"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 1,
                            FeatureTypeId = 6,
                            Value = "Amd Ryzen 7 9800X3D"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 1,
                            FeatureTypeId = 6,
                            Value = "Amd Ryzen 9 9950X3D"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 1,
                            FeatureTypeId = 7,
                            Value = "5.5\""
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 1,
                            FeatureTypeId = 7,
                            Value = "6.1\""
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 1,
                            FeatureTypeId = 7,
                            Value = "13.3\""
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 1,
                            FeatureTypeId = 7,
                            Value = "15.6\""
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 1,
                            FeatureTypeId = 7,
                            Value = "24\""
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 1,
                            FeatureTypeId = 7,
                            Value = "27\""
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 2,
                            FeatureTypeId = 1,
                            Value = "Red"
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 2,
                            FeatureTypeId = 1,
                            Value = "Blue"
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 2,
                            FeatureTypeId = 1,
                            Value = "Green"
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 2,
                            FeatureTypeId = 1,
                            Value = "Yellow"
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 2,
                            FeatureTypeId = 2,
                            Value = "XS"
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 2,
                            FeatureTypeId = 2,
                            Value = "S"
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 2,
                            FeatureTypeId = 2,
                            Value = "M"
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 2,
                            FeatureTypeId = 2,
                            Value = "L"
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 2,
                            FeatureTypeId = 2,
                            Value = "XL"
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 2,
                            FeatureTypeId = 3,
                            Value = "Cotton"
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 2,
                            FeatureTypeId = 3,
                            Value = "Polyester"
                        },
                        new
                        {
                            Id = 32,
                            CategoryId = 2,
                            FeatureTypeId = 3,
                            Value = "Wool"
                        },
                        new
                        {
                            Id = 33,
                            CategoryId = 2,
                            FeatureTypeId = 3,
                            Value = "Denim"
                        },
                        new
                        {
                            Id = 34,
                            CategoryId = 2,
                            FeatureTypeId = 3,
                            Value = "Silk"
                        },
                        new
                        {
                            Id = 35,
                            CategoryId = 2,
                            FeatureTypeId = 3,
                            Value = "Leather"
                        },
                        new
                        {
                            Id = 36,
                            CategoryId = 2,
                            FeatureTypeId = 3,
                            Value = "Faux Leather"
                        },
                        new
                        {
                            Id = 37,
                            CategoryId = 2,
                            FeatureTypeId = 3,
                            Value = "Linen"
                        },
                        new
                        {
                            Id = 38,
                            CategoryId = 2,
                            FeatureTypeId = 3,
                            Value = "Viscose"
                        },
                        new
                        {
                            Id = 39,
                            CategoryId = 3,
                            FeatureTypeId = 1,
                            Value = "Beige"
                        },
                        new
                        {
                            Id = 40,
                            CategoryId = 3,
                            FeatureTypeId = 1,
                            Value = "White"
                        },
                        new
                        {
                            Id = 41,
                            CategoryId = 3,
                            FeatureTypeId = 1,
                            Value = "Brown"
                        },
                        new
                        {
                            Id = 42,
                            CategoryId = 3,
                            FeatureTypeId = 1,
                            Value = "Gray"
                        },
                        new
                        {
                            Id = 43,
                            CategoryId = 3,
                            FeatureTypeId = 3,
                            Value = "Wood"
                        },
                        new
                        {
                            Id = 44,
                            CategoryId = 3,
                            FeatureTypeId = 3,
                            Value = "Metal"
                        },
                        new
                        {
                            Id = 45,
                            CategoryId = 3,
                            FeatureTypeId = 3,
                            Value = "Plastic"
                        },
                        new
                        {
                            Id = 46,
                            CategoryId = 3,
                            FeatureTypeId = 3,
                            Value = "Glass"
                        },
                        new
                        {
                            Id = 47,
                            CategoryId = 3,
                            FeatureTypeId = 3,
                            Value = "Ceramic"
                        });
                });

            modelBuilder.Entity("NLayeredApp.Core.Entities.FeatureType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("FeatureTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Color"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Size"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Material"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Storage"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Memory"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Processor"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Screen Size"
                        });
                });

            modelBuilder.Entity("NLayeredApp.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset?>("LastModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Name");

                    b.HasIndex("CategoryId", "Price");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "system",
                            Description = "Samsung's latest smartphone",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Galaxy S25",
                            Price = 74999.00m,
                            Stock = 200
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "system",
                            Description = "Samsung's flagship phone",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Galaxy S24",
                            Price = 54999.00m,
                            Stock = 200
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "system",
                            Description = "Wireless performance mouse",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Logitech MX Master 3S",
                            Price = 3129.99m,
                            Stock = 110
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "system",
                            Description = "Wireless illuminated keyboard",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Logitech MX Keys",
                            Price = 3119.99m,
                            Stock = 95
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "system",
                            Description = "Gaming headset with Blue VO!CE",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Logitech G Pro X",
                            Price = 5149.99m,
                            Stock = 70
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "system",
                            Description = "Wired gamepad controller",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Logitech F310",
                            Price = 529.99m,
                            Stock = 200
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "system",
                            Description = "100% cotton polo shirt",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Polo Shirt",
                            Price = 299.99m,
                            Stock = 500
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "system",
                            Description = "Regular Fit Denim Jeans",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Blue Denim Jean",
                            Price = 599.99m,
                            Stock = 300
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "system",
                            Description = "High-quality running shoes designed for daily training and comfort",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Running Shoes",
                            Price = 899.99m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "system",
                            Description = "5-tier wooden bookshelf",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bookshelf",
                            Price = 599.99m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "system",
                            Description = "Wooden dining table with 6 chairs",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Dining Table Set",
                            Price = 1899.99m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "system",
                            Description = "Modern adjustable LED floor lamp",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "LED Floor Lamp",
                            Price = 299.99m,
                            Stock = 50
                        });
                });

            modelBuilder.Entity("NLayeredApp.Core.Entities.ProductFeatureType", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("FeatureTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "FeatureTypeId");

                    b.HasIndex("FeatureId");

                    b.HasIndex("CategoryId", "FeatureTypeId");

                    b.ToTable("ProductFeatureTypes");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            FeatureTypeId = 1,
                            CategoryId = 1,
                            FeatureId = 3
                        },
                        new
                        {
                            ProductId = 1,
                            FeatureTypeId = 4,
                            CategoryId = 1,
                            FeatureId = 6
                        },
                        new
                        {
                            ProductId = 1,
                            FeatureTypeId = 5,
                            CategoryId = 1,
                            FeatureId = 10
                        },
                        new
                        {
                            ProductId = 2,
                            FeatureTypeId = 1,
                            CategoryId = 1,
                            FeatureId = 2
                        },
                        new
                        {
                            ProductId = 2,
                            FeatureTypeId = 4,
                            CategoryId = 1,
                            FeatureId = 5
                        },
                        new
                        {
                            ProductId = 2,
                            FeatureTypeId = 5,
                            CategoryId = 1,
                            FeatureId = 9
                        },
                        new
                        {
                            ProductId = 3,
                            FeatureTypeId = 1,
                            CategoryId = 1,
                            FeatureId = 1
                        },
                        new
                        {
                            ProductId = 4,
                            FeatureTypeId = 1,
                            CategoryId = 1,
                            FeatureId = 1
                        },
                        new
                        {
                            ProductId = 5,
                            FeatureTypeId = 1,
                            CategoryId = 1,
                            FeatureId = 1
                        },
                        new
                        {
                            ProductId = 6,
                            FeatureTypeId = 1,
                            CategoryId = 1,
                            FeatureId = 3
                        },
                        new
                        {
                            ProductId = 7,
                            FeatureTypeId = 1,
                            CategoryId = 2,
                            FeatureId = 21
                        },
                        new
                        {
                            ProductId = 7,
                            FeatureTypeId = 3,
                            CategoryId = 2,
                            FeatureId = 30
                        },
                        new
                        {
                            ProductId = 7,
                            FeatureTypeId = 2,
                            CategoryId = 2,
                            FeatureId = 27
                        },
                        new
                        {
                            ProductId = 8,
                            FeatureTypeId = 1,
                            CategoryId = 2,
                            FeatureId = 22
                        },
                        new
                        {
                            ProductId = 8,
                            FeatureTypeId = 3,
                            CategoryId = 2,
                            FeatureId = 33
                        },
                        new
                        {
                            ProductId = 9,
                            FeatureTypeId = 1,
                            CategoryId = 2,
                            FeatureId = 23
                        },
                        new
                        {
                            ProductId = 9,
                            FeatureTypeId = 3,
                            CategoryId = 2,
                            FeatureId = 31
                        },
                        new
                        {
                            ProductId = 12,
                            FeatureTypeId = 1,
                            CategoryId = 3,
                            FeatureId = 41
                        },
                        new
                        {
                            ProductId = 12,
                            FeatureTypeId = 3,
                            CategoryId = 3,
                            FeatureId = 43
                        },
                        new
                        {
                            ProductId = 10,
                            FeatureTypeId = 1,
                            CategoryId = 3,
                            FeatureId = 42
                        },
                        new
                        {
                            ProductId = 10,
                            FeatureTypeId = 3,
                            CategoryId = 3,
                            FeatureId = 47
                        },
                        new
                        {
                            ProductId = 11,
                            FeatureTypeId = 1,
                            CategoryId = 3,
                            FeatureId = 40
                        },
                        new
                        {
                            ProductId = 11,
                            FeatureTypeId = 3,
                            CategoryId = 3,
                            FeatureId = 44
                        });
                });

            modelBuilder.Entity("NLayeredApp.Core.Entities.CategoryFeatureType", b =>
                {
                    b.HasOne("NLayeredApp.Core.Entities.Category", "Category")
                        .WithMany("CategoryFeatureTypes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NLayeredApp.Core.Entities.FeatureType", "FeatureType")
                        .WithMany("CategoryFeatureTypes")
                        .HasForeignKey("FeatureTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("FeatureType");
                });

            modelBuilder.Entity("NLayeredApp.Core.Entities.Feature", b =>
                {
                    b.HasOne("NLayeredApp.Core.Entities.CategoryFeatureType", "CategoryFeatureType")
                        .WithMany("Features")
                        .HasForeignKey("CategoryId", "FeatureTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryFeatureType");
                });

            modelBuilder.Entity("NLayeredApp.Core.Entities.Product", b =>
                {
                    b.HasOne("NLayeredApp.Core.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("NLayeredApp.Core.Entities.ProductFeatureType", b =>
                {
                    b.HasOne("NLayeredApp.Core.Entities.Feature", "Feature")
                        .WithMany()
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NLayeredApp.Core.Entities.Product", "Product")
                        .WithMany("ProductFeatureTypes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NLayeredApp.Core.Entities.CategoryFeatureType", "CategoryFeatureType")
                        .WithMany("ProductFeatureTypes")
                        .HasForeignKey("CategoryId", "FeatureTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CategoryFeatureType");

                    b.Navigation("Feature");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("NLayeredApp.Core.Entities.Category", b =>
                {
                    b.Navigation("CategoryFeatureTypes");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("NLayeredApp.Core.Entities.CategoryFeatureType", b =>
                {
                    b.Navigation("Features");

                    b.Navigation("ProductFeatureTypes");
                });

            modelBuilder.Entity("NLayeredApp.Core.Entities.FeatureType", b =>
                {
                    b.Navigation("CategoryFeatureTypes");
                });

            modelBuilder.Entity("NLayeredApp.Core.Entities.Product", b =>
                {
                    b.Navigation("ProductFeatureTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
